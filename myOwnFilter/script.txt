안녕하십니까!
디지털이미징 20172979 이효중입니다.

제가 이번에 기획해본 필터는 폴라로이드 필터입니다.
카메라로 찍어 필름으로 바로 현상하는 폴라로이드 처럼, 이미 가지고 있는 이미지를 더 의미 있는 장면으로 만들고 싶은 분들을 위해 기획해 보았습니다.

알고리즘 설명입니다.
이 필터는 기존에 배웠던 효과들 중에서
Saturation을 -20만큼 조정하고
Contrast을 -20만큼,
Shadow를 +30 만큼 조정
Blur를 Convolution 을 7X7 크기의 마스크로, 하지만 홀수 숫자로서 Blur 정도를 조정할 수 있게 했습니다.
그리고 Backgrounddark 함수를 변형하여 폴라로이드 필름처럼 흰색 프레임이 보일 수 있게 수정해보았습니다.

이 필터는 myOwnFilter라는 프로젝트명으로
image.h를 헤더로 include하고 bmp.cpp와 colorprocessing.cpp, color.cpp, main.cpp로 이루어져 있습니다.
먼저 image 헤더파일입니다. RGB로 이루어진 이미지의 hsb값을 확인하기 위한 showHSBinfo라는 함수와 제가 구현한 myfilmeffect라는 함수를 선언한 것을 확인할 수 있습니다.

그 다음 colorprocessing파일입니다. showHSBinfo함수는 다른 필터와 마찬가지로 loc 변수를 사용하여 rgb 개체를 생성하고 rgb2hsb 함수를 사용하여 각 픽셀의 hsb값을 출력하게 하는 함수입니다.
그 다음 myfilmeffect 함수입니다. 앞서 보여드렸던 함수와 같이 각 픽셀의 hsb 값에서 s값을 조정하여 saturation을 조정합니다.
그 다음 밝기를 0.7초과, 0.3미만인 부분으로 나누어 밝기를 조절함으로써 대비를 줄이는 효과를 주었습니다.
또한 그림자도 30정도 주었습니다.

블러효과는 main에서 홀수 정수 ratio를 입력받아 매트릭스를 생성해서 효과를 주게하였습니다. 입력 받은 ratio의 크기 만큼 이차원 배열을 생성하기 위해 동적할당을 두번 사용합니다. 그리고 그 행들에서 for문을 사용하여 행에 원소들을 ratio 제곱 분의 1에 해당하는 크기로 대입해줍니다. 그 뒤 저희가 배웠던 블러의 원리대로 각 픽셀에 효과를 적용해주는 과정이 되겠습니다.

마지막으로 폴라로이드의 흰색 테두리를 만들어주는 과정입니다. 원래 backgrounddark 함수가 폭과 높이의 비율을 기준으로 하여 바깥쪽을 어둡게 한다는 원리를 변형하여 아예 흰색으로 만들어 테두리를 만들었습니다.
높이 0.05미만인 부분, 0.8이상, 그러니까 하단에서 0.2 만큼인 부분과 좌우 폭 0.05에 해당하는 부분까지 hsb값 0,0,100으로 만들어줍니다.

마지막으로 main 함수입니다.
홀수 정수로 블러의 마스크 사이즈를 정하도록 입력을 받습니다. -1을 입력하면 종료되고, 3미만이거나 짝수를 입력할 경우 다시 처음으로 돌아가게 됩니다. 제대로 입력되었다면 그뒤로 이미지를 읽어들이고, 필터를 호출한 후 다시 쓰고 종료합니다.

실행 결과 입니다. 맑은 날 찍은 채도가 강한 사진 일수록 실행 전후가 더욱 대비되는 것을 확인할 수 있습니다. 이 야간사진 같이 너무 흐려지는 것을 방지하기 위해 블러의 강도를 조절할 수 있도록 한 것입니다.